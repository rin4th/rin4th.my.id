---
import Pattern from "~/icons/Pattern.astro";
import PostCard from "~/components/PostCard.svelte";
import ProjectCard from "~/components/ProjectCard.astro";
import type { CollectionEntry } from "astro:content";
import NewPostCard from "./NewPostCard.svelte";
import NewProjectCard from "./NewProjectCard.astro";

type PostSectionProps = {
	type: "post";
	data: CollectionEntry<"posts">[];
};

type ProjectSectionProps = {
	type: "project";
	data: CollectionEntry<"projects">[];
};

// need to add this alias because Astro can't handle intersection type
type SectionProps = {
	title: string;
	buttonText: string;
	url: string;
} & (PostSectionProps | ProjectSectionProps);

export type Props = SectionProps;

const props = Astro.props as Props;
---

<section class="relative mt-16 lg:mx-10 font-serif text-white text-center z-[2]">
	<Pattern class="text-white absolute top-0 -left-8 w-56 h-40" />
	<h1
		class="uppercase font-heading relative inline-block text-2xl font-semibold mb-8 before:(content-[] absolute -bottom-1 h-1 left-8 right-8 rounded-md bg-cyan-600)"
	>
		{props.title}
	</h1>
	<div class="grid grid-cols-[repeat(auto-fit,minmax(18rem,1fr))] gap-5">
		{
			props.type === "post" &&
				props.data.map(({ data, slug }) => (
					<NewPostCard
						title={data.title}
						href={`/posts/${slug}`}
						description={data.description}
						date={data.date}
						tags={data.tags}
					/>
				))
		}
		{
			props.type === "project" &&
				props.data.map(({ data, slug }) => (
					<NewProjectCard
						title={data.title}
						imageSource={`/assets/projects/${slug}/cover.webp`}
						href={`/projects/${slug}`}
						description={data.description}
						demo={data.demo}
						source={data.source}
					/>
				))
		}
	</div>
	<a href={props.url} role="button" class="btn-lg-cyan-600 uppercase">
		{props.buttonText}
	</a>
</section>
